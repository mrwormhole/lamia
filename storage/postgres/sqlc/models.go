// Code generated by sqlc. DO NOT EDIT.

package sqlc

import (
	"database/sql"
	"fmt"
)

type OrderStatus string

const (
	OrderStatusPAID       OrderStatus = "PAID"
	OrderStatusPROCESSING OrderStatus = "PROCESSING"
	OrderStatusCOMPLETED  OrderStatus = "COMPLETED"
)

func (e *OrderStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = OrderStatus(s)
	case string:
		*e = OrderStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for OrderStatus: %T", src)
	}
	return nil
}

type PermissionRole string

const (
	PermissionRoleVIEWER PermissionRole = "VIEWER"
	PermissionRoleEDITOR PermissionRole = "EDITOR"
	PermissionRoleADMIN  PermissionRole = "ADMIN"
)

func (e *PermissionRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PermissionRole(s)
	case string:
		*e = PermissionRole(s)
	default:
		return fmt.Errorf("unsupported scan type for PermissionRole: %T", src)
	}
	return nil
}

type Customer struct {
	ID        int64
	FirstName string
	LastName  string
	Email     string
	UserID    sql.NullInt64
}

type Group struct {
	ID        int64
	Name      string
	CreatedAt sql.NullTime
	UpdatedAt sql.NullTime
}

type Order struct {
	ID            int64
	TransactionID string
	Status        OrderStatus
	CreatedAt     sql.NullTime
	UpdatedAt     sql.NullTime
	CustomerID    int64
}

type Permission struct {
	ID        int64
	Role      PermissionRole
	Topic     string
	CreatedAt sql.NullTime
	UpdatedAt sql.NullTime
	GroupID   sql.NullInt64
}

type ShippingAddress struct {
	ID         int64
	Address    string
	City       string
	Country    string
	Zipcode    string
	CreatedAt  sql.NullTime
	UpdatedAt  sql.NullTime
	CustomerID int64
}

type User struct {
	ID          int64
	FirstName   string
	LastName    string
	Email       string
	Username    sql.NullString
	Password    sql.NullString
	IsSuperuser bool
	IsStaff     bool
	IsActive    bool
	CreatedAt   sql.NullTime
	UpdatedAt   sql.NullTime
	LastLoginAt sql.NullTime
	GroupID     sql.NullInt64
}
